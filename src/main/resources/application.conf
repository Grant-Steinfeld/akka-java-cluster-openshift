akka {
  # Log the complete configuration at INFO level when the actor system is started.
  # This is useful when you are uncertain of what configuration is used.
  log-config-on-start = off

  # stdout-loglevel = "OFF"
  stdout-loglevel = "DEBUG"
  # loglevel = "OFF"
  # loglevel = "DEBUG"
  loglevel = "INFO"
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  log-dead-letters = on
  log-dead-letters-during-shutdown = off

  actor {
    provider = "cluster"
  }
}

akka.discovery {
  kubernetes-api {
    pod-label-selector = "app=%s" # same as the default
  }
}

akka.management {
  cluster.bootstrap {
    contact-point-discovery {
      # For the kubernetes API this value is substributed into the %s in pod-label-selector
      service-name = "akka-cluster-demo"

      discovery-method = kubernetes-api
    }
  }
}

# Enable metrics extension in akka-cluster-metrics.
#akka.extensions = ["akka.cluster.metrics.ClusterMetricsExtension"]

# Sigar native library extract location during tests.
# Note: use per-jvm-instance folder when running multiple jvm on one host.
#akka.cluster.metrics.native-library-extract-folder = ${user.dir}/target/native

#akka.cluster.jmx.multi-mbeans-in-same-jvm = on

# Timeout in 15 minutes 15m * 60s = 900s
akka.http.server.idle-timeout = 900s
akka.http.client.idle-timeout = 900s
